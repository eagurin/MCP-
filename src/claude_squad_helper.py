#!/usr/bin/env python3
"""
Claude Squad Helper - —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Claude Squad v1.0.8+
"""

import subprocess
import sys
import json
from pathlib import Path
from typing import Dict, List, Optional

def get_active_sessions() -> List[Dict]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π –∏–∑ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    try:
        # –ß–∏—Ç–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ –ª–æ–≥ —Ñ–∞–π–ª–∞ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        log_file = Path("orchestrator.log")
        if not log_file.exists():
            return []
        
        sessions = []
        with open(log_file, 'r', encoding='utf-8') as f:
            for line in f:
                if "–°–æ–∑–¥–∞–Ω–∞ –ª–æ–≥–∏—á–µ—Å–∫–∞—è Claude Squad —Å–µ—Å—Å–∏—è" in line:
                    # –ü–∞—Ä—Å–∏–º —Å–µ—Å—Å–∏—é –∏–∑ –ª–æ–≥–∞
                    if "github-task-" in line:
                        task_id = line.split("github-task-")[1].split()[0]
                        sessions.append({
                            "task_id": task_id,
                            "session_name": f"github-task-{task_id}",
                            "status": "active"
                        })
        
        return sessions
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–π: {e}")
        return []

def show_session_prompt(task_id: str):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–º–ø—Ç –¥–ª—è –∑–∞–¥–∞—á–∏"""
    try:
        # –ß–∏—Ç–∞–µ–º –ø—Ä–æ–º–ø—Ç –∏–∑ –ª–æ–≥–æ–≤
        log_file = Path("orchestrator.log")
        if log_file.exists():
            with open(log_file, 'r', encoding='utf-8') as f:
                content = f.read()
                
            print(f"\nü§ñ –ü—Ä–æ–º–ø—Ç –¥–ª—è –∑–∞–¥–∞—á–∏ #{task_id}:")
            print("=" * 60)
            print(f"""–¢—ã - —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ GitHub (ID: agent_{task_id}).

–ù–∞–π–¥–∏ issue #{task_id} –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–¥–∞—á—É.

–¢–í–û–Ø –†–û–õ–¨:
1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
2. –°–æ–∑–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏  
3. –†–µ–∞–ª–∏–∑—É–π –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥–µ
4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π —Ä–µ—à–µ–Ω–∏–µ
5. –°–æ–∑–¥–∞–π pull request
6. –û–±–Ω–æ–≤–ª—è–π —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏

–í–ê–ñ–ù–´–ï –ü–†–ê–í–ò–õ–ê:
- –†–∞–±–æ—Ç–∞–π –∞–≤—Ç–æ–Ω–æ–º–Ω–æ, –Ω–æ —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏
- –ò—Å–ø–æ–ª—å–∑—É–π —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏ —Å—Ç–∏–ª—å –∫–æ–¥–∞
- –í—Å–µ–≥–¥–∞ —Ç–µ—Å—Ç–∏—Ä—É–π –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ commit
- –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä—É–π —Å–ª–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è
- –°–æ–æ–±—â–∞–π –æ –±–ª–æ–∫–µ—Ä–∞—Ö –∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö

–û–¢–ß–ï–¢–ù–û–°–¢–¨:
- –û—Å—Ç–∞–≤–ª—è–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ GitHub issue –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
- –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤: üîÑ —Ä–∞–±–æ—Ç–∞, ‚úÖ –≥–æ—Ç–æ–≤–æ, ‚ùå –ø—Ä–æ–±–ª–µ–º–∞
- –û–±–Ω–æ–≤–ª—è–π —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç —Ä–∞–±–æ—Ç—ã

–ù–∞—á–Ω–∏ —Å –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–¥–∞—á–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.""")
            print("=" * 60)
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –ø—Ä–æ–º–ø—Ç–∞: {e}")

def launch_claude_squad():
    """–ó–∞–ø—É—Å–∫ Claude Squad –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã"""
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ Claude Squad...")
        print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏—à–∏:")
        print("   n - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é")
        print("   N - —Å–æ–∑–¥–∞—Ç—å —Å–µ—Å—Å–∏—é —Å –ø—Ä–æ–º–ø—Ç–æ–º")
        print("   ‚Üë/‚Üì - –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å–µ—Å—Å–∏—è–º")
        print("   Enter - –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Å—Å–∏–∏")
        print("   ctrl-q - –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç —Å–µ—Å—Å–∏–∏")
        print("   D - —É–¥–∞–ª–∏—Ç—å —Å–µ—Å—Å–∏—é")
        print("=" * 50)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Claude Squad
        subprocess.run(["cs"], check=False)
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Claude Squad: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    import argparse
    
    parser = argparse.ArgumentParser(
        description="Claude Squad Helper",
        formatter_class=argparse.RawDescriptionHelpFormatter
    )
    
    parser.add_argument(
        "--sessions", action="store_true", 
        help="–ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    )
    
    parser.add_argument(
        "--prompt", type=str, metavar="TASK_ID",
        help="–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–º–ø—Ç –¥–ª—è –∑–∞–¥–∞—á–∏"
    )
    
    parser.add_argument(
        "--launch", action="store_true",
        help="–ó–∞–ø—É—Å—Ç–∏—Ç—å Claude Squad –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ"
    )
    
    args = parser.parse_args()
    
    if args.sessions:
        sessions = get_active_sessions()
        if sessions:
            print("üìã –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
            for session in sessions:
                print(f"  ‚Ä¢ –ó–∞–¥–∞—á–∞ #{session['task_id']} - {session['session_name']}")
            print(f"\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python claude_squad_helper.py --prompt TASK_ID")
        else:
            print("‚ùå –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
    elif args.prompt:
        show_session_prompt(args.prompt)
        
    elif args.launch:
        launch_claude_squad()
        
    else:
        parser.print_help()
        print("\nüîç –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
        print("  python claude_squad_helper.py --sessions")
        print("  python claude_squad_helper.py --prompt 11")
        print("  python claude_squad_helper.py --launch")

if __name__ == "__main__":
    main()